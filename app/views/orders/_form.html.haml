= form_for order, :url => { :action => "create" } do |f|
  .row.errors
    .col-md-12
      - if order.errors.any?
        - order.errors.full_messages.each do |message|
          %p.alert.alert-danger 
            = message
  .row.new-order
    .col-md-3.section.location-selection
      .panel
        .field
          .row
            .col-md-12
              = f.label :restaurant_id
              %hr
            .col-md-12
              = f.select :restaurant_id, Restaurant.all.collect { |r| [ r.name, r.id ] }, prompt: 'Restaurant', selected: Restaurant.first&.id
      .panel
        .field
          .row
            .col-md-12
              = f.label :section
              %hr
            .col-md-12
              = f.select :section, Order::SECTION.collect { |section| [ section ] }, prompt: 'Section'
      .panel
        .field
          .row
            .col-md-12
              = f.label :seat
              %hr
            .col-md-12
              = f.select :seat, (1..50).collect { |s| [ s ] }, prompt: 'Seat'
    .col-md-5.items.section
      %label
        Items
      - Item.available.order(:name).each do |item|
        .panel{ id: item.id}
          .row
            .col-md-5.name
              = f.hidden_field :item_name, value: item.name
              = f.hidden_field :item_price, value: item.price
              = item.name
            .col-md-3.price
              = number_to_currency(item.price)
            .col-md-3
              %button.btn.btn-success{ type: "button", data: { action: 'add-item' } } Add Item
    .col-md-4.current-sale.section
      .panel
        .row
          .col-md-8
            %label
              Current Sale
          .col-md-3.total
            %label
              $0.00
        %hr
        .items
          - @order&.line_items.each do |line_item|
            .row.sale-item
              %input{ name: "items_attributes[][id]", type: "hidden", value: line_item.item.id }/
              .col-md-6.item-name
                = line_item.name
              .col-md-6.text-right
                %i.fa.fa-times.fa-2x.delete-item
              .col-md-12.price
                = number_to_currency(line_item.price)
      .row
        .text-center.col-md-12.actions
          %button.btn.btn-primary.big-blue-btn{ type: "submit", data: { action: 'complete-order' } } 
            Send Order
            = fa_icon "chevron-circle-right"

:javascript
  console.log('hello from _form')
  $(document).ready(function() {
    // Calculate the total when arriving to the screen
    calculateTotal()

    // Delete Item
    $('body').on('click', '.delete-item', function() {
      $(this).closest('.row.sale-item').remove()
      calculateTotal()
    })

    // Add Item to Order
    $("[data-action='add-item']").click(function() {
      const itemId = $(this).closest('.panel').attr('id')
      const itemName = $(this).closest('.row').find("[name='order[item_name]']").val()
      const itemPrice = parseFloat(
                    $(this)
                    .closest('.row')
                    .find("[name='order[item_price]']")
                    .val())
                    .toFixed(2)

      const itemNameHTML = "<div class='row sale-item'>" +
                      "<div class='col-md-6 item-name'>" + 
                        itemName + 
                      "</div>" + 
                      "<div class='col-md-6 text-right'>" +
                        "<i class='fa fa-times fa-2x delete-item'></i>" +
                      "</div>" +
                      "<div class='col-md-12 price'>" +
                        `$${itemPrice}` +
                    "</div>"
      $('<input>').attr({
        type: 'hidden',
        name: "items_attributes[][id]",
        value: itemId
      }).appendTo('form');
      $('.current-sale .items').append(itemNameHTML)

      refreshEventListener();

      calculateTotal()
    });

    function refreshEventListener() {
      // on.click() wasn't working for dynamically added items
      // so the event listeners are reset every time an item is added
      $(".delete-item").off(); 

      $(".delete-item").on("click", function() {
        $(this).closest('.row.item').remove()
      })
    }

    function calculateTotal() {
      const salePrices = $('.sale-item')
      let total = 0.00

      $('.sale-item').each(function(i, obj) {
        const itemPriceString = $(obj).find('.price').text()
        
        const itemPriceFloat = parseFloat(itemPriceString.replace(/\$/g, ''))
        total += itemPriceFloat
      });

      $('.total').html(`<label>$${total.toFixed(2)}</label>`)
    }
  });