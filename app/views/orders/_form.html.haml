= form_for order, :url => { :action => "create" } do |f|
  .row.errors
    .col-md-12
      - if order.errors.any?
        - order.errors.full_messages.each do |message|
          %p.alert.alert-danger 
            = message
  .row.new-order
    .col-md-3.section.location-selection
      .panel
        .field
          .row
            .col-md-12
              = f.label :restaurant_id
              %hr
            .col-md-12
              = f.select :restaurant_id, Restaurant.all.collect { |r| [ r.name, r.id ] }, prompt: 'Restaurant', selected: Restaurant.first&.id
      .panel
        .field
          .row
            .col-md-12
              = f.label :section
              %hr
            .col-md-12
              = f.select :section, Order::SECTION.collect { |section| [ section ] }, prompt: 'Section', selected: Order::SECTION.first
      .panel
        .field
          .row
            .col-md-12
              = f.label :seat
              %hr
            .col-md-12
              = f.select :seat, (1..50).collect { |s| [ s ] }, prompt: 'Seat'
    .col-md-5.items.section
      %label
        Items
      - Item.available.order(:name).each do |item|
        .panel{ id: item.id}
          .row
            .col-md-5.name
              = f.hidden_field :item_name, value: item.name
              = f.hidden_field :item_price, value: item.price
              = item.name
            .col-md-3.price
              = number_to_currency(item.price)
            .col-md-3
              %button.btn.btn-success{ type: "button", data: { action: 'add-item' } } Add Item

    #note-modal.modal.fade{"aria-hidden" => "true", role: "dialog", tabindex: "-1"}
      = f.hidden_field :line_item_index, value: 0
      .modal-dialog{:role => "document"}
        .modal-content
          .modal-header
            %h5#exampleModalLabel.modal-title Add Note
            %button.close{"aria-label" => "Close", "data-dismiss" => "modal", type: "button"}
              %span{"aria-hidden" => "true"} Ã—
          .modal-body
            .row
              .col-md-12
                %p This note will be attached to the item.
              .col-md-12
                = text_area_tag 'item_attributes[][notes]', nil, class: 'note'
          .modal-footer
            %button.btn.btn-primary.save{type: "button"} Save

    .col-md-4.current-sale.section
      .panel
        .row
          .col-md-8
            %label
              Current Sale
          .col-md-3.total
            %label
              $0.00
        %hr
        .items
          - @order&.line_items.each_with_index do |line_item, index|
            .row.sale-item{ id: index }
              %input{ name: "items_attributes[#{index}][id]", type: "hidden", value: line_item.item.id }/
              %input{ class: "note-#{index} note-text", name: "items_attributes[#{index}][notes]", type: "hidden", value: line_item.notes }/
              .col-md-6.item-name
                = line_item.name
              .col-md-6.text-right
                %i.fa.fa-times.fa-2x.delete-item
              .col-md-12.price
                = number_to_currency(line_item.price)
              .col-md-12.add-note{ data: { toggle: "modal", target: "#note-modal"} }
                %a
                  + Add Note
      .row
        .text-center.col-md-12.actions
          %button.btn.btn-primary.big-blue-btn{ type: "submit", data: { action: 'complete-order' } } 
            Send Order
            = fa_icon "chevron-circle-right"

:javascript
  console.log('hello from _form')
  $(document).ready(function() {
    // Calculate the total when arriving to the screen
    calculateTotal()

    // Everytime a modal is shown. Autofocus.
    $('#note-modal').on('shown.bs.modal', function () {
      $('#note-modal textarea').focus()
    })

    // Delete Item
    $('body').on('click', '.delete-item', function() {
      $(this).closest('.row.sale-item').remove()
      calculateTotal()
    })

    // Set line item index. This changes the hidden field everyt ime .add-note is
    // clicked. After a note is saved, it looks to this hidden field for guidance
    // as to which line item to save the note.
    $(".add-note").click(function() {
      let index = $(this).closest('.sale-item').attr('id')
      let text = $(this).closest('.sale-item').find('.note-text').val()
      $('#order_line_item_index').val(index)

      $('#note-modal textarea').val(text)
    });

    // Save Note. Using the lineItemIndex, save the text on the note hidden field that will
    // be passed to the back end.
    $(".save").click(function() {
      let textBox = $(this).parent().prev().find('textarea')
      let lineItemIndex = $('#order_line_item_index').val()
      let noteField = $(`.note-${lineItemIndex}`).val(textBox.val())

      // close modal
      $('.modal').modal('toggle');

      // clear textbox
      textBox.val('')
    });

    // Add Item to Order
    $("[data-action='add-item']").click(function() {
      // If there are already line items present then start at the appropriate index. For
      // example, if there are 3 line items, then add the new item with index 3 (0, 1, 2, 3)
      // for 4 total items in the current sale.
      let totalSaleItems = $('.sale-item').length

      const itemId = $(this).closest('.panel').attr('id')
      const itemName = $(this).closest('.row').find("[name='order[item_name]']").val()
      const itemPrice = parseFloat(
                    $(this)
                    .closest('.row')
                    .find("[name='order[item_price]']")
                    .val())
                    .toFixed(2)

      const itemNameHTML = `<div class='row sale-item' id='${totalSaleItems}'>` +
                      "<div class='col-md-6 item-name'>" + 
                        itemName + 
                      "</div>" + 
                      "<div class='col-md-6 text-right'>" +
                        "<i class='fa fa-times fa-2x delete-item'></i>" +
                      "</div>" +
                      "<div class='col-md-12 price'>" +
                        `$${itemPrice}` +
                      "</div>" +

                      "<div class='col-md-12 add-note' data-toggle='modal' data-target='#note-modal'>" +
                        '<a>' +
                          '+ Add Note'
                        '</a>' +
                      "</div>"

      $('.current-sale .items').append(itemNameHTML)

      $('<input>').attr({
        type: 'hidden',
        name: `items_attributes[${totalSaleItems}][id]`,
        value: itemId
      }).appendTo($( '.sale-item' ).last());

      $('<input>').attr({
        type: 'hidden',
        name: `items_attributes[${totalSaleItems}][notes]`,
        class: `note-${totalSaleItems} note-text`,
        value: ''
      }).appendTo($( '.sale-item' ).last());

      refreshEventListener();

      calculateTotal()
    });

    function refreshEventListener() {
      // on.click() wasn't working for dynamically added items
      // so the event listeners are reset every time an item is added
      $(".delete-item").off(); 

      $(".delete-item").on("click", function() {
        $(this).closest('.row.item').remove()
      })

      $(".add-note").off(); 

      $(".add-note").on("click", function() {
        let index = $(this).closest('.sale-item').attr('id')
        let text = $(this).closest('.sale-item').find('.note-text').val()
        $('#order_line_item_index').val(index)

        $('#note-modal textarea').val(text)
      })
    }

    function calculateTotal() {
      const salePrices = $('.sale-item')
      let total = 0.00

      $('.sale-item').each(function(i, obj) {
        const itemPriceString = $(obj).find('.price').text()
        
        const itemPriceFloat = parseFloat(itemPriceString.replace(/\$/g, ''))
        total += itemPriceFloat
      });

      $('.total').html(`<label>$${total.toFixed(2)}</label>`)
    }
  });